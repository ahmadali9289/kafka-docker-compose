version: "3.7"

services:

  postgres:
    image: postgres:12.2-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  kafka: # https://hub.docker.com/r/confluentinc/cp-kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zooKeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zooKeeper
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - '9092:9092'
    platform: linux/amd64

  zooKeeper: # https://hub.docker.com/r/confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
    image: 'confluentinc/cp-zookeeper:latest'
    ports:
      - '2181:2181'
    platform: linux/amd64

  schemaRegistry: # https://hub.docker.com/r/confluentinc/cp-schema-registry
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zooKeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: GET,POST,PUT,OPTIONS
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
    image: 'confluentinc/cp-schema-registry:latest'
    ports:
      - '8982:8081'
    platform: linux/amd64